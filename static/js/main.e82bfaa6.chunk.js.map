{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","findMovie","useState","query","setSearch","setMovie","error","setError","isLoaded","setLoaded","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","data","Title","Poster","imdbID","Plot","htmlFor","type","id","placeholder","value","onChange","target","disabled","classNames","onClick","App","setMovies","newMovie","currentMovies","some","addedMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e82bfaa6.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.description}\n        <br />\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { FormEvent, useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  findMovie: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ findMovie }) => {\n  const [query, setSearch] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [isLoaded, setLoaded] = useState(false);\n\n  const onSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (!query) {\n      return;\n    }\n\n    setLoaded(true);\n    getMovie(query)\n      .then(data => {\n        if ('Error' in data) {\n          setError(true);\n          setLoaded(false);\n\n          return;\n        }\n\n        setMovie({\n          title: data.Title,\n          imgUrl: data.Poster,\n          imdbId: data.imdbID,\n          imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n          description: data.Plot,\n        });\n\n        setError(false);\n        setLoaded(false);\n      });\n  };\n\n  const onAdd = () => {\n    if (!movie) {\n      return;\n    }\n\n    findMovie(movie);\n    setSearch('');\n    setMovie(null);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => onSubmit(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={(event) => setSearch(event.target.value)}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!query}\n              className={classNames('button is-light', {\n                'is-loading': isLoaded,\n              })}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                disabled={!query}\n                onClick={onAdd}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=3aa7fb8';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const findMovie = (newMovie: Movie) => {\n    setMovies(currentMovies => {\n      currentMovies.some(addedMovies => addedMovies.imdbId === newMovie.imdbId);\n\n      return [...currentMovies, newMovie];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          findMovie={findMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}